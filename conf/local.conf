#dunfell
#CONF_VERSION = "1"
#MACHINE = "qemux86-64"

#kirkstone
CONF_VERSION = "2"

#BB_SERVER_TIMEOUT = "60"

BB_GENERATE_MIRROR_TARBALLS = "1"

#glibc in gentoo
#require conf/distro/include/yocto-uninative.inc
#INHERIT += "uninative"
#PACKAGECONFIG:append:pn-gstreamer1.0-plugins-bad = " webrtcdsp"
#PACKAGECONFIG:append:pn-pulseaudio = " webrtc"

#require conf/distro/include/no-static-libs.inc
#require conf/distro/include/security_flags.inc
#GCCPIE = "--enable-default-pie"

PATCHRESOLVE = "noop"

#INHERIT += "rm_work"

OE_TERMINAL = "screen"

DISTRO_FEED_PREFIX = "jama"
DISTRO_FEED_URI = "http://jama.dyndns-home.com/org.openembedded.shr-core/"

INHERIT += "buildhistory"
BUILDHISTORY_COMMIT ?= "1"
BUILDHISTORY_COMMIT_AUTHOR ?= "Martin Jansa <Martin.Jansa@gmail.com>"

PREFERRED_ARM_INSTRUCTION_SET              ?= "thumb"
ARM_INSTRUCTION_SET = "${PREFERRED_ARM_INSTRUCTION_SET}"

DISTRO_FEATURES:remove = "x11"
DISTRO_FEATURES:append = " wayland"
#PREFERRED_PROVIDER_virtual/libgl = "mesa-gl"
#PREFERRED_PROVIDER_virtual/mesa = "mesa-gl"

#DISTRO_FEATURES:remove = "debuginfod gobject-introspection-data"
#DISTRO_FEATURES:remove = "gobject-introspection-data"

#LICENSE_FLAGS_WHITELIST = "commercial"
LICENSE_FLAGS_ACCEPTED = "commercial"

#DISTRO_FEATURES:append = " opengl"
#DISTRO_FEATURES:append = " opengl wayland vulkan"
#DISTRO_FEATURES:append = " ld-is-gold"
DISTRO_FEATURES:append = " ld-is-lld"
DISTRO_FEATURES:append = " virtualization"
SKIP_META_SECURITY_SANITY_CHECK = "1"
EXTRA_IMAGE_FEATURES = "debug-tweaks"

INIT_MANAGER = "systemd"
#DISTRO_FEATURES:remove = "seccomp"

# enable reporting
# needs http://patchwork.openembedded.org/patch/68735/
ERR_REPORT_SERVER = "errors.yoctoproject.org"
ERR_REPORT_PORT = "80"
ERR_REPORT_USERNAME = "Martin Jansa"
ERR_REPORT_EMAIL = "Martin.Jansa@gmail.com"
ERR_REPORT_UPLOAD_FAILURES = "1"
INHERIT += "report-error"

INHERIT += "buildstats buildstats-summary"

UVESA_MODE = "1600x1200-32"

ENABLE_UART = "1"
RPI_USE_U_BOOT = "1"

#DEFAULT_WARN_QA ?= "\
#    ldflags useless-rpaths rpaths staticdev libdir xorg-driver-abi \
#    textrel already-stripped incompatible-license files-invalid \
#    installed-vs-shipped compile-host-path install-host-path \
#    pn-overrides infodir build-deps \
#    unknown-configure-option symlink-to-sysroot multilib \
#    invalid-packageconfig host-user-contaminated uppercase-pn patch-fuzz \
#"

#ERROR_QA:append = " ${DEFAULT_WARN_QA}"
#WARN_QA:remove = "${DEFAULT_WARN_QA}"
ERROR_QA:remove = "version-going-backwards"

#TCLIBC = "musl"
#TCLIBC:qemux86-64 = "musl"
#DISTRO_FEATURES:remove = "gobject-introspection-data"

#PREFERRED_VERSION_elfutils = "0.148"

# to have something with fontconfig.bbclass inherit in the image
IMAGE_INSTALL:append:pn-core-image-weston = " liberation-fonts"
# needed by weston now
DISTRO_FEATURES:append = " pam"

I_SWEAR_TO_MIGRATE_TO_PYTHON3 = "yes"

#DISTRO_FEATURES:append = " usrmerge"

#USER_CLASSES:append = " image-prelink"
#IMAGE_INSTALL:append:pn-core-image-minimal = " dbus python3-cryptography-ptest"

#PREFERRED_PROVIDER_virtual/kernel = "linux-raspberrypi-dev"

#SRCREV:pn-pseudo-native = "parsing-test"

DISTRO_FEATURES:append = " opengl wayland"
#PACKAGECONFIG:append:pn-qtbase = " icu gl accessibility examples kms eglfs ${@bb.utils.contains('DISTRO_FEATURES', 'x11', '', 'gles2', d)}"
#BBMASK += 'openembedded-core/meta/conf/machine/qemux86-64.conf'

DISTRO_FEATURES:append = " ptest"

#PRSERV_HOST = "127.0.0.1:0"
#BB_HASHSERVE = "auto"

#BBINCLUDELOGS = ""
#BBINCLUDELOGS_LINES = "1"
#BB_LOGCONFIG = "no"

#PREFERRED_PROVIDER_virtual/docker = "docker-moby"

#FORTRAN:forcevariable = ",fortran"
#RUNTIMETARGET:append:pn-gcc-runtime = "libquadmath"

#PACKAGE_CLASSES = "package_rpm"

# INHERIT += "create-spdx"
#INHERIT += "ccache"

#SOURCE_DATE_EPOCH = "0"

#DEBUG_BUILD = "1"

require /OE/build/oe-builds.conf

#IMAGE_LINK_NAME = ""
#KERNEL_IMAGE_LINK_NAME = ""
##KERNEL_DTB_NAME = ""
##KERNEL_DTB_LINK_NAME = ""
#KERNEL_FIT_LINK_NAME = ""
#MODULE_TARBALL_LINK_NAME = ""
#INITRAMFS_LINK_NAME = ""
#IMAGE_MACHINE_SUFFIX = ""
#IMAGE_NAME_SUFFIX = ""

#PACKAGECONFIG:append:pn-dropbear = " system-libtom"

#PACKAGECONFIG:remove:pn-elfutils = "debuginfod"
#PACKAGECONFIG:remove:pn-elfutils = "libdebuginfod"
#PACKAGECONFIG:remove:pn-binutils = "debuginfod"
#PACKAGECONFIG:append:pn-gstreamer1.0-plugins-good = " wavpack"

# TOOLCHAIN ?= "clang"
PREFERRED_PROVIDER_llvm = "clang"
PREFERRED_PROVIDER_llvm-native = "clang-native"
PREFERRED_PROVIDER_nativesdk-llvm = "nativesdk-clang"
PROVIDES:pn-clang = "llvm"
PROVIDES:pn-clang-native = "llvm-native"
PROVIDES:pn-nativesdk-clang = "nativesdk-llvm"

#PACKAGE_CLASSES = "package_rpm"
#PACKAGE_CLASSES = "package_ipk"
#PACKAGE_ADD_AUTHOR_METADATA = "test-author"
#PACKAGE_ADD_METADATA = "Author: ${PACKAGE_ADD_AUTHOR_METADATA}"
#OPKG_MAKE_INDEX_EXTRA_PARAMS = "-f"
#RPMBUILD_EXTRA_PARAMS = " --define '_Author Author'"
##PACKAGE_ADD_METADATA_RPM = ""
#PACKAGE_ADD_METADATA_IPK = ""
#PACKAGE_ADD_METADATA_DEP = ""

#IMAGE_FSTYPES:rpi = "rpi-sdimg.gz"
